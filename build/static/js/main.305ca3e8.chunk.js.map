{"version":3,"sources":["components/Chatbox.js","components/Chatline.js","config.js","App.js","index.js"],"names":["Chatbox","props","action","className","type","onChange","onchange","placeholder","name","value","text","onClick","onclick","Chatline","mssg","currentUser","slice","chatText","dateTime","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","userName","useState","chatInput","setChatInput","chatsList","setChatsList","useEffect","prompt","prev","collection","orderBy","onSnapshot","ss","arr","forEach","doc","push","data","map","elem","index","id","e","target","preventDefault","date","Date","time","now","mssgObj","hrs","getHours","min","getMinutes","add","then","docRef","console","log","catch","error","ReactDOM","render","document","getElementById"],"mappings":"yRAeeA,MAXf,SAAiBC,GACb,OACI,uBAAMC,OAAO,GAAGC,UAAU,UAA1B,UACA,uBAAOC,KAAK,OAAOC,SAAUJ,EAAMK,SAAUC,YAAY,OAAOC,KAAK,WAAWC,MAAOR,EAAMS,OAE7F,wBAAQC,QAASV,EAAMW,QAAvB,sB,MCSOC,MAbf,SAAkBZ,GACd,OACI,6BACA,sBAAKE,UAAW,aAAcF,EAAMa,KAAKN,OAASP,EAAMc,YAAa,OAAO,SAA5E,UACI,6BAAKd,EAAMa,KAAKN,KAAKQ,MAAM,EAAG,MAC9B,4BAAIf,EAAMa,KAAKG,WACf,mBAAGd,UAAU,aAAb,SAA2BF,EAAMa,KAAKI,iB,sBCGlDC,IAASC,cAVY,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAMX,IAAMC,EAAKR,IAASS,YACLT,EAAf,ECuEeU,MAjFf,WAEE,IAAIC,EAAW,GACf,EAAkCC,mBAAS,CACzC,SAAY,GACZ,KAAO,GACP,KAAO,EACP,SAAW,KAJb,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA4DA,OAPAC,qBAAU,WAjBRN,EAAWO,OAAO,oBAClBJ,GAAa,SAACK,GACZ,OAAO,2BAAIA,GAAX,IAAiB,KAAOR,OAITH,EAAGY,WAAW,SAASC,QAAQ,QACvCC,YAAW,SAACC,GACnB,IAAIC,EAAM,GACVD,EAAGE,SAAQ,SAACC,GACVF,EAAIG,KAAKD,EAAIE,WAEfZ,EAAaQ,QASd,IAID,sBAAKxC,UAAU,MAAf,UACE,6BACG+B,EAAUc,KAAI,SAACC,EAAKC,GACnB,OAAO,cAAC,EAAD,CAAUpC,KAAMmC,EAAkBE,GAAID,EAAOnC,YAAaiB,EAAUxB,MAAzC0C,QAGxC,cAAC,EAAD,CAAS5C,SA9DX,SAAyB8C,GACvB,MAAsBA,EAAEC,OAAjB7C,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbwB,GAAa,SAACK,GACZ,OAAO,2BAAIA,GAAX,kBACG9B,EAAQC,QA0DuBG,QA9CtC,SAAsBwC,GAEpB,GADAA,EAAEE,iBACyB,KAAvBtB,EAAUf,SAAd,CACA,IAAIsC,EAAO,IAAIC,KACfxB,EAAUyB,KAAOD,KAAKE,MACtB,IAbeC,EAaXC,EAAML,EAAKM,WACXC,EAAMP,EAAKQ,aACf/B,EAAUd,SAAY0C,EAAI,GAAI,IAAKE,GAAMF,GAAO,GAAK,KAAK,MAC1DzB,GAAa,SAAAG,GAAO,MAAM,GAAN,mBAAWA,GAAX,CAAiBN,OAhBtB2B,EAiBP3B,EAhBRL,EAAGY,WAAW,SAASyB,IAAIL,GAC1BM,MAAK,SAACC,GAAUC,QAAQC,IAAIF,EAAOf,OACnCkB,OAAM,SAACC,GAASH,QAAQC,IAAI,iBAAiBE,MAe9CrC,GAAa,SAAAK,GAAO,OAAO,2BAAIA,GAAX,IAAiBrB,SAAS,UAoCaP,KAAMsB,EAAUf,SAAUT,KAAMwB,EAAUxB,WC9EzG+D,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.305ca3e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Chatbox.css';\r\n\r\n\r\nfunction Chatbox(props){\r\n    return(\r\n        <form action=\"\" className=\"chatbox\">\r\n        <input type=\"text\" onChange={props.onchange} placeholder=\"Text\" name=\"chatText\" value={props.text} />\r\n        {/* <input type=\"text\" onChange={props.onchange} placeholder=\"Sender\" name=\"name\" value={props.name} /> */}\r\n        <button onClick={props.onclick}>send</button>\r\n      </form>\r\n    );\r\n}\r\n\r\n\r\nexport default Chatbox;","import React from 'react';\r\nimport './Chatline.css';\r\n\r\n\r\n\r\nfunction Chatline(props) {\r\n    return(\r\n        <li>\r\n        <div className={\"chatline \"+((props.mssg.name === props.currentUser)?\"user\":\"other\")}>\r\n            <h5>{props.mssg.name.slice(0, 30)}</h5>\r\n            <p>{props.mssg.chatText}</p>\r\n            <p className=\"time-stamp\">{props.mssg.dateTime}</p>\r\n        </div>\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\nexport default Chatline;","import firebase from \"firebase/app\";\r\nimport firestore from \"firebase\"\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCAU_6V17T3ZwMYnYzo4BIoQ7wmv32AHA\",\r\n    authDomain: \"chat-app-d116c.firebaseapp.com\",\r\n    projectId: \"chat-app-d116c\",\r\n    storageBucket: \"chat-app-d116c.appspot.com\",\r\n    messagingSenderId: \"117866356263\",\r\n    appId: \"1:117866356263:web:917b03ec83f43f9de53802\"\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nexport default firebase; \r\nexport {db, firestore };","import React, { useEffect, useState } from 'react';\nimport Chatbox from \"./components/Chatbox\"\nimport Chatline from \"./components/Chatline\"\nimport './App.css';\nimport firebase, {firestore, db} from \"../src/config\" \n\n\nfunction App() {\n  // const [userName, setUserName] = useState(\"\");\n  let userName = \"\";\n  const [chatInput, setChatInput] = useState({\n    \"chatText\": \"\",\n    \"name\":\"\",\n    \"time\":0,\n    \"dateTime\":\"\",\n  });\n  const [chatsList, setChatsList] = useState([]);\n\n  \n\n\n  function handleChatInput(e) {\n    const {name, value} = e.target;\n    setChatInput((prev) => {\n      return {...prev,\n        [name] : value}\n    });\n  }\n\n  function addToDB(mssgObj) {\n    db.collection(\"Chats\").add(mssgObj)\n    .then((docRef)=>{console.log(docRef.id);})\n    .catch((error)=>{console.log(\"Erroe occured \"+error);})\n  }\n\n  \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (chatInput.chatText === \"\")return\n    let date = new Date();\n    chatInput.time = Date.now();\n    let hrs = date.getHours();\n    let min = date.getMinutes();\n    chatInput.dateTime = (hrs%12)+\":\"+(min)+(hrs >= 12 ? \"am\":\"pm\");\n    setChatsList(prev=>{return([...prev, chatInput]);});\n    addToDB(chatInput);\n    setChatInput(prev=>{return {...prev, chatText:\"\"}});\n    \n  }\n\n  function askUsername() {\n    userName = prompt(\"Enter Username: \");\n    setChatInput((prev)=>{\n      return {...prev, \"name\":userName};\n    });\n  }\n  function fetchChats() {\n    const chatsRef = db.collection(\"Chats\").orderBy(\"time\");\n    chatsRef.onSnapshot((ss)=>{\n      let arr = [];\n      ss.forEach((doc)=>{\n        arr.push(doc.data())\n      })\n      setChatsList(arr);\n    });\n  }\n\n  \n  useEffect(() => {\n    askUsername();\n    fetchChats();\n    \n  }, []);\n  \n\n  return (\n    <div className=\"App\">\n      <ul>\n        {chatsList.map((elem,index) => {\n          return(<Chatline mssg={elem} key={index} id={index} currentUser={chatInput.name}/>)\n        })}\n      </ul>\n    <Chatbox onchange={handleChatInput} onclick={handleSubmit} text={chatInput.chatText} name={chatInput.name}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}