{"version":3,"sources":["components/Chatbox.js","components/Chatline.js","components/Chats.js","components/Nav.js","config.js","App.js","index.js"],"names":["Chatbox","props","className","action","type","onChange","onchange","placeholder","name","value","text","onClick","onclick","Chatline","mssg","currentUser","slice","chatText","dateTime","Chats","user","signedIn","chatList","map","elem","index","id","userName","Nav","useState","open","setOpen","option","setOption","e","actions","logOut","isOpen","onRequestClose","style","content","width","height","margin","htmlFor","handleUserChange","email","password","preventDefault","signUp","signIn","handleSubmit","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","Modal","setAppElement","App","chatInput","setChatInput","chatsList","setChatsList","setUser","createUserWithEmailAndPassword","then","userCredential","updateProfile","displayName","prev","catch","error","errorMessage","message","alert","signInWithEmailAndPassword","signOut","target","scrollToBottom","document","querySelector","scrollIntoView","useEffect","onAuthStateChanged","currUser","collection","orderBy","onSnapshot","ss","arr","forEach","doc","push","data","mssgObj","time","Date","now","add","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.00b0a482.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Chatbox.css';\r\n\r\n\r\nfunction Chatbox(props){\r\n    return(\r\n      <div className=\"chatbox\">\r\n        <form action=\"\" className=\"chatbox-form\">\r\n        <input className=\"chatbox-input\" type=\"text\" onChange={props.onchange} placeholder=\"Text\" name=\"chatText\" value={props.text} />\r\n        <button onClick={props.onclick}>send</button>\r\n      </form>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Chatbox;","import React from 'react';\r\nimport './Chatline.css';\r\n\r\n\r\n\r\nfunction Chatline(props) {\r\n    return(\r\n        <li>\r\n        <div className={\"chatline \"+((props.mssg.name === props.currentUser)?\"user\":\"other\")}>\r\n            <h5>{props.mssg.name.slice(0, 30)}</h5>\r\n            <p>{props.mssg.chatText}</p>\r\n            <p className=\"time-stamp\">{props.mssg.dateTime}</p>\r\n        </div>\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\nexport default Chatline;","import React from \"react\";\r\nimport Chatline from \"../components/Chatline\";\r\nimport \"./Chats.css\"\r\n\r\n\r\n\r\n\r\nfunction Chats(props) {\r\n    return(\r\n        (props.user.signedIn) &&\r\n        <ul className=\"chatList\">\r\n        {props.chatList.map((elem,index) => {\r\n          return(<Chatline mssg={elem} key={index} id={index} currentUser={props.user.userName}/>)\r\n        })}\r\n        <div className=\"padd\"></div>\r\n        </ul>\r\n    );\r\n    \r\n}\r\n\r\nexport default Chats;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n// import { auth } from \"../config\";\r\nimport \"./Nav.css\"\r\n\r\n\r\n\r\n\r\nfunction Nav(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    function handleSubmit(e, type) {\r\n        e.preventDefault();\r\n        if (!(props.user.email && props.user.password))return\r\n        (type === \"Sign Up\") ? props.actions.signUp(props.user): props.actions.signIn(props.user);\r\n    }\r\n\r\n    return (\r\n    <div className=\"nav\">\r\n        {(!props.user.signedIn) ? \r\n        //if not signed in\r\n        <><button type=\"button\" onClick={()=>{setOpen(true); setOption(\"Sign In\")}}>\r\n            Sign In\r\n        </button>\r\n        <button type=\"button\" onClick={()=>{setOpen(true); setOption(\"Sign Up\")}}>\r\n            Sign Up\r\n        </button>\r\n        </>\r\n        :\r\n        //If signed in\r\n        <>\r\n        <h3>User: <b>{props.user.userName}</b> </h3>\r\n        <button type=\"button\" onClick={(e)=>{setOption(\"Log Out\"); props.actions.logOut()}}>\r\n            Log Out\r\n        </button>\r\n        </>\r\n        }\r\n        \r\n        <Modal\r\n        isOpen={open}\r\n        onRequestClose={()=>{setOpen(false)}}\r\n        style={{\r\n                content: {\r\n                width: \"50%\",\r\n                height: \"50%\",\r\n                margin: \"auto\",\r\n                }\r\n            }}\r\n        >\r\n\r\n\r\n        <h1>{option}</h1>\r\n\r\n        {/* //The Sign in or Sign Up form */}\r\n        <form action=\"\" className=\"auth\">\r\n            {(option === \"Sign Up\") && \r\n                <>\r\n                <label htmlFor=\"userName\">Username:</label>\r\n                <input type=\"text\" name=\"userName\" value={props.user.userName} onChange={props.actions.handleUserChange} />\r\n                </>\r\n            }\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input type=\"email\" name=\"email\" value={props.user.email} onChange={props.actions.handleUserChange} />\r\n            <label htmlFor=\"password\">Password: </label>\r\n            <input type=\"password\" name=\"password\" value={props.user.password} onChange={props.actions.handleUserChange}/>\r\n            \r\n            <button onClick={(e)=>{\r\n                setOpen(false); handleSubmit(e, option)\r\n                }}>{option}</button>\r\n        </form>\r\n        \r\n        </Modal>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Nav;\r\n\r\n\r\n\r\n\r\n","import firebase from \"firebase/app\";\r\nimport firestore from \"firebase\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCAU_6V17T3ZwMYnYzo4BIoQ7wmv32AHA\",\r\n    authDomain: \"chat-app-d116c.firebaseapp.com\",\r\n    projectId: \"chat-app-d116c\",\r\n    storageBucket: \"chat-app-d116c.appspot.com\",\r\n    messagingSenderId: \"117866356263\",\r\n    appId: \"1:117866356263:web:917b03ec83f43f9de53802\"\r\n};\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nexport default firebase; \r\nexport {db, auth,  firestore };","import React, { useEffect, useState } from 'react';\nimport Chatbox from \"./components/Chatbox\";\nimport Chats from \"./components/Chats\"\nimport Nav from \"./components/Nav\";\nimport './App.css';\nimport firebase, {firestore, db, auth} from \"../src/config\" \n\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\n\nfunction App() {\n  const [chatInput, setChatInput] = useState({\n    \"chatText\": \"\",\n    \"name\":\"\",\n    \"time\":0,\n    \"dateTime\":\"\",\n  });\n  const [chatsList, setChatsList] = useState([]);\n\n  const [user, setUser] = useState({\n    \"userName\":\"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"signedIn\":false,\n  });\n\n\n\n  function handleChatInput(e) {\n    const {name, value} = e.target;\n    setChatInput((prev) => {\n      return {...prev,\n        [name] : value}\n    });\n  }\n\n  function addToDB(mssgObj) {\n    db.collection(\"newChats\").add(mssgObj)\n  }\n\n  \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (chatInput.chatText === \"\")return\n    \n    chatInput.time = Date.now();\n    chatInput.dateTime = Date().slice(0, 21)//((hrs%12)>=10?(hrs%12):\"0\"+(hrs%12))+\":\"+((min>=10? min:\"0\"+min))+(hrs >= 12 ? \"pm\":\"am\");\n    setChatsList(prev=>{return([...prev, chatInput]);});\n    addToDB(chatInput);\n    setChatInput(prev=>{return {...prev, chatText:\"\"}});\n    \n  }\n\n  function fetchChats() {\n    const chatsRef = db.collection(\"newChats\").orderBy(\"time\");\n    chatsRef.onSnapshot((ss)=>{\n      let arr = [];\n      ss.forEach((doc)=>{\n        arr.push(doc.data())\n      })\n      setChatsList(arr);\n      scrollToBottom()\n    });\n  }\n\n  function signUP(user) {\n    firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n    .then((userCredential) => {\n      firebase.auth().currentUser.updateProfile({\n                      displayName: user.userName,\n                  });\n      setUser((prev)=>{return{...prev, signedIn:true}})\n    \n    })\n    .catch((error) => {\n      var errorMessage = error.message\n      alert(errorMessage);\n    });\n  }\n\n  function signIn(user) {\n    firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n    .then((userCredential) => {\n      setUser((prev)=>{return{...prev, signedIn:true}})\n    })\n    .catch((error) => {\n      var errorMessage = error.message;\n      alert(errorMessage);\n    });\n  }\n\n  function logOut() {\n    auth.signOut();\n    setUser({\"userName\":\"\",\"email\": \"\",\"password\": \"\"})\n  }\n\n  function handleUserChange(e) {\n    const {name, value} = e.target;\n    setUser((prev)=>{\n      return ({\n        ...prev,\n        [name] : value,\n      });\n    });\n  }\n\n  const actions = {\n    \"signUp\": signUP,\n    \"signIn\":signIn,\n    \"logOut\": logOut,\n    \"handleUserChange\":handleUserChange,\n  };\n\n  function scrollToBottom() {\n    const lis = document.querySelector(\".chatList\");\n    lis.scrollIntoView(false);\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(currUser=>{\n      if(currUser){\n        setUser({\"userName\":currUser.displayName,\"email\": \"\",\"password\": \"\", signedIn:true});\n        setChatInput((prev)=>{return{...prev, name:currUser.displayName}})\n        fetchChats();\n        scrollToBottom();\n      }\n      })\n  },[]);\n\n\n  \n  \n\n  return (\n    <div className=\"App\">\n    <Nav user={user} actions={actions} />\n    {\n      (user.signedIn) &&\n    <>\n    <Chats chatList={chatsList} user={user}/>\n    <Chatbox onchange={handleChatInput} onclick={handleSubmit} text={chatInput.chatText}/>\n    </> \n    }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}